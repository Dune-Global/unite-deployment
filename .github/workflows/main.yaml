name: Update Submodules

on:
  push:
    branches:
      - main 
  repository_dispatch:
    types: [update-submodules]

jobs:
  update-submodules:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        
    - name: Set up Git identity
      run: |
        git config --global user.email "wasath.vt@gmail.com"
        git config --global user.name "WasathTheekshana"
        
    - name: Update submodules
      run: |
        # Define the branches for each submodule
        declare -A submodule_branches=(
          ["unite-doctor-frontend"]="dev/v1"
          ["unite-patient-frontend"]="dev/v1"
          ["unite-landing-frontend"]="main"
          ["unite-doctor-backend"]="main"
        )

        # Iterate over each submodule, checkout the specified branch, and pull latest changes
        for submodule in "${!submodule_branches[@]}"; do
          branch="${submodule_branches[$submodule]}"
          git -C "$submodule" checkout "$branch" && git -C "$submodule" pull origin "$branch"
        done
        
        # Add any changes in the submodules
        git add .
        
        # Check if there are changes in submodules
        submodule_changes=$(git status --porcelain | grep '^ M' | wc -l)
        if [ $submodule_changes -eq 0 ]; then
          echo "No changes in submodules."
        else
          export GIT_AUTHOR_DATE="2024-02-10T12:00:00"
          export GIT_COMMITTER_DATE="2024-02-10T12:00:00"
          if git commit -m "Update submodules" --date="2024-02-10T12:00:00"; then
            git submodule foreach 'git add . && git commit -m "Update submodule reference" && git push'
            git push
          else
            echo "Failed to commit changes."
            exit 1
          fi
        fi
